{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","handleLogout","props","unloadUserProfile","onRouteChange","className","onClick","this","React","Component","Signin","onUsernameChange","event","setState","username","target","value","onPasswordChange","password","onSubmitClick","fetch","method","headers","body","JSON","stringify","state","then","response","json","data","id","loadUserProfile","error","style","color","htmlFor","onChange","type","name","Register","onEmailChange","email","Logo","options","max","height","width","src","brain","alt","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","divs","boxArray","map","box","index","boxStyle","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","key","imageSrc","particleEffect","App","displayFaceBox","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","calculateMultiFaceLocation","calculateLocationAndDraw","region","input","imageUrl","userProfile","Object","assign","catch","err","console","log","route","joined","params","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17ddd30f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.035bc20b.png\";","import React from 'react';\r\nimport './Navigation.css';\r\nclass Navigation extends React.Component {\r\n    handleLogout = () => {\r\n        this.props.unloadUserProfile();\r\n        this.props.onRouteChange('signin');\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-bar\">\r\n                <p onClick={this.handleLogout}>Sign Out</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Signin.css';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: false,\r\n        }\r\n    }\r\n\r\n    onUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value,\r\n        })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmitClick = (event) => {\r\n        fetch('https://secure-plains-33429.herokuapp.com/signin', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })    \r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            if (data.id) {\r\n                this.props.loadUserProfile(data);\r\n                this.props.onRouteChange('home');\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <div className=\"form-layer-2\">\r\n                    <div className=\"input-div\">\r\n                        {(this.state.error) ? <h4 style={{color: 'red',}}>Wrong username or password</h4> : ''}\r\n                    </div>\r\n                    <div className=\"input-div\">\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <br />\r\n                            <input onChange={this.onUsernameChange} type=\"text\" name=\"username\" id=\"username\" />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-div\">\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <br />\r\n                            <input onChange={this.onPasswordChange} type=\"password\" name=\"password\" id=\"password\" />\r\n                        </label>\r\n                    </div>\r\n                    <input onClick={this.onSubmitClick}className=\"submit-button\" type=\"submit\" value=\"Sign In\" />\r\n                    <br />\r\n                    <button onClick={() => this.props.onRouteChange('register')}className=\"register-button\">Register</button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport './Register.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            email: '',    \r\n            error: false,\r\n        }\r\n    }\r\n\r\n    onUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value,\r\n        })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value,\r\n        })\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmitClick = () => {\r\n        fetch('https://secure-plains-33429.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            if (data.id) {\r\n                this.props.onRouteChange('signin');\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <div className=\"form-layer-2\">\r\n                    <div className=\"input-div\">\r\n                        {(this.state.error) ? <h4 style={{color: 'red'}}>Please fill in the form correctly</h4> : ''}\r\n                    </div>\r\n                    <div className=\"input-div\">\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <br />\r\n                            <input onChange={this.onUsernameChange} type=\"text\" name=\"username\" id=\"username\" />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-div\">\r\n                        <label htmlFor=\"email\">\r\n                            Email:\r\n                            <br />\r\n                            <input onChange={this.onEmailChange} type=\"text\" name=\"email\" id=\"email\" />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-div\">\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <br />\r\n                            <input onChange={this.onPasswordChange} type=\"password\" name=\"password\" id=\"password\" />\r\n                        </label>\r\n                    </div>\r\n                    <input onClick={this.onSubmitClick} className=\"submit-button\" type=\"submit\" value=\"Register\" />\r\n                    <br/>\r\n                    <button onClick={() => this.props.onRouteChange('signin')} className=\"signin-button\">Login</button>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nclass Logo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"logo-container\">\r\n                <Tilt className=\"Tilt tilt-logo\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n                    <div className=\"Tilt-inner img-container\">\r\n                        <img src={brain} alt=\"brain-logo\" width=\"100\" height=\"100\"/>\r\n                    </div>\r\n                </Tilt>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nclass Rank extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"user-info\">\r\n                    {this.props.username}, your current entry count is: \r\n                </div>\r\n                <div className=\"user-rank\">\r\n                    {this.props.entries}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nclass ImageLinkForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"image-text\">\r\n                    This magic brain will detect faces in your picture.\r\n                </p>\r\n                <div className=\"sector-container\">\r\n                    <input type=\"text\" name=\"image-url\" onChange={this.props.onInputChange}/>\r\n                    <button onClick={this.props.onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nclass FaceRecognition extends React.Component {\r\n    render() {\r\n        \r\n        const boxArray = this.props.boxArray;\r\n        // Create style for muliple face locations\r\n        const divs = boxArray.map((box, index) => {\r\n            let boxStyle = {\r\n                top: box.topRow,\r\n                bottom: box.bottomRow,\r\n                left: box.leftCol,\r\n                right: box.rightCol,\r\n            }\r\n            return <div className=\"region-box\" style={boxStyle} key={index}></div>\r\n        })\r\n        return (\r\n            <div className=\"center img-container\">\r\n                <div className=\"img-position\">\r\n                    <img id=\"input-image\" src={this.props.imageSrc} alt=\"\" width=\"500\" height=\"auto\" />\r\n                    {divs}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n\n// Clarifai API\n\n\n// Particle effect configuration\nconst particleEffect = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 50,\n      },\n      \"size\": {\n          \"value\": 3\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      }\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signin',\n      userProfile: {\n        id: '',\n        username: '',\n        email: '',\n        joined: '',\n        entries: 0,\n      }\n    }\n  }\n\n\n  displayFaceBox = (box) => {\n    this.setState({\n      box: [...box]\n    })\n\n  }\n  // Calculate top, left, bottom, right of 1 face location\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('input-image');\n    const width = Number(image.width); // Or clientwidth\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n  // Calculate top, left, bottom, right position of multiple faces\n  calculateMultiFaceLocation = (data) => {\n    const clarifaiFace = data.region_info.bounding_box;\n    const image = document.getElementById('input-image');\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n  // Combine calculate and drawing\n  calculateLocationAndDraw = (data) => {\n    let boxArray = data.outputs[0].data.regions.map((region) => {\n      return this.calculateMultiFaceLocation(region)\n    })\n    this.displayFaceBox(boxArray);\n  } \n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value,\n    })\n  }\n\n  onButtonSubmit = (event) => {\n    this.setState({\n      imageUrl: this.state.input,\n    })\n    fetch('https://secure-plains-33429.herokuapp.com/imageUrl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        imageUrl: this.state.input,\n      })\n    }).then(response => response.json())\n    .then((response) => {\n      fetch('https://secure-plains-33429.herokuapp.com/image', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.userProfile.id,\n        })\n      }).then(response => response.json())\n      .then(entries => {\n        this.setState(Object.assign(this.state.userProfile, {entries,}));\n      }).catch(err => console.log(err));\n\n      this.calculateLocationAndDraw(response);\n    }).catch(err => console.log(err))\n  }\n  // Change route state \n  onRouteChange = (route) => {\n    if ( route === 'signin') {\n      this.setState({\n        imageUrl: '',\n      })\n    }\n    this.setState({\n      route,\n    });\n  }\n\n  // Change user state \n  loadUserProfile = (data) => {\n    this.setState({\n      userProfile: {\n        id: data.id,\n        username: data.username,\n        email: data.email,\n        joined: data.joined,\n        entries: data.entries,\n      }\n    })\n  }\n\n  // Unload user profile\n  unloadUserProfile = () => {\n    this.setState({\n      userProfile: {\n        id: '',\n        username: '',\n        email: '',\n        joined: '',\n        entries: 0,\n      }\n    })\n  }\n  render() {\n    return (\n      <div className='App'>\n        <Particles params={particleEffect} className=\"particle-effect\" />\n        {\n          (this.state.route === 'signin')\n          ? <Signin onRouteChange={this.onRouteChange} loadUserProfile={this.loadUserProfile} />\n          : ( (this.state.route === 'home') \n            ? (<React.Fragment>\n                <Navigation onRouteChange={this.onRouteChange} unloadUserProfile={this.unloadUserProfile} />\n                <Logo />\n                <Rank entries={this.state.userProfile.entries} username={this.state.userProfile.username}/>\n                <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n                <FaceRecognition imageSrc={this.state.imageUrl} boxArray={this.state.box}/>\n              </React.Fragment>) \n            : <Register onRouteChange={this.onRouteChange}  />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}